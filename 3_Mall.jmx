<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="健康头条-商城系统" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\Program File\apache-jmeter-5.4\lib\json.jar,D:\Program File\apache-jmeter-5.4\lib\json-lib-2.4-jdk15.jar,D:\Program File\mysql-connector-java-8.0.11\mysql-connector-java-8.0.11.jar,D:\Program Files\apache-jmeter-5.4\lib\jython-standalone-2.7.0.jar</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="全局变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="app" elementType="Argument">
            <stringProp name="Argument.name">app</stringProp>
            <stringProp name="Argument.value">https://zixun.001pt.com</stringProp>
            <stringProp name="Argument.desc">APP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="health" elementType="Argument">
            <stringProp name="Argument.name">health</stringProp>
            <stringProp name="Argument.value">https://zixun-mp.001pt.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">健康号</stringProp>
          </elementProp>
          <elementProp name="admin" elementType="Argument">
            <stringProp name="Argument.name">admin</stringProp>
            <stringProp name="Argument.value">https://zixun-admin.001pt.com</stringProp>
            <stringProp name="Argument.desc">后台</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">https://app-connect.jk-tt.com</stringProp>
            <stringProp name="Argument.desc">APP--线上环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">https://mp.jk-tt.com</stringProp>
            <stringProp name="Argument.desc">健康号--线上环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">https://web-admin.jk-tt.com</stringProp>
            <stringProp name="Argument.desc">后台--线上环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="phoneNumber" elementType="Argument">
            <stringProp name="Argument.name">phoneNumber</stringProp>
            <stringProp name="Argument.value">151${__Random(00000001,99999999,)}</stringProp>
            <stringProp name="Argument.desc">个人用户手机号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="count" elementType="Argument">
            <stringProp name="Argument.name">count</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">获取验证码的循环次数（从0开始）</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="admin_account" elementType="Argument">
            <stringProp name="Argument.name">admin_account</stringProp>
            <stringProp name="Argument.value">zhangjianming</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="icon" elementType="Argument">
            <stringProp name="Argument.name">icon</stringProp>
            <stringProp name="Argument.value">D:\jmeter_code\image\bbb.jpg</stringProp>
            <stringProp name="Argument.desc">一级商品分类</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="image_1" elementType="Argument">
            <stringProp name="Argument.name">image_1</stringProp>
            <stringProp name="Argument.value">D:\jmeter_code\image\180917953.png</stringProp>
            <stringProp name="Argument.desc">虚拟卡券商品图片</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="image_2" elementType="Argument">
            <stringProp name="Argument.name">image_2</stringProp>
            <stringProp name="Argument.value">D:\jmeter_code\image\143057218.jpg</stringProp>
            <stringProp name="Argument.desc">实物商品图片</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="商城系统" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="正向场景用例管理" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="登录后台" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${msg}&quot;!=&quot;null&quot; &amp;&amp; ${count}!=20)}</stringProp>
          </WhileController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.2.1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登录验证码" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="timeStamp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${str_date}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeStamp</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineLogin/getCode</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="智能识别验证码" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Date;
import java.text.SimpleDateFormat;

int count = Integer.parseInt(vars.get(&quot;count&quot;));
count += 1;
vars.put(&quot;count&quot;,count+&quot;&quot;);
Date d1 = new Date();
SimpleDateFormat sdf4 = new SimpleDateFormat(&quot;MMdd-HHmmss&quot;);
String image_date = sdf4.format(d1);
byte[] response_date = prev.getResponseData();
OutputStream os = new FileOutputStream(&quot;D:\\jmeter_code\\imageCodes\\&quot;+image_date+&quot;.jpg&quot;);
os.write(response_date, 0, response_date.length);
os.flush();
os.close();
String[] str = new String[]{&quot;python&quot;,&quot;D:\\jmeter_code\\get_imageCode.py&quot;,image_date};
Process pr = Runtime.getRuntime().exec(str);	
BufferedReader in = new BufferedReader(new InputStreamReader(pr.getInputStream()));
String line = &quot;&quot;;
while ((line = in.readLine()) != null) {
	vars.put(&quot;imgCode&quot;,line);
}
//
//log.error(response_date);
//log.error(vars.get(&quot;imgCode&quot;));</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Date;

Date d1 = new Date();
String str_date = d1.getTime()+&quot;&quot;;
vars.put(&quot;str_date&quot;,str_date);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录管理后台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;loginName&quot;: &quot;zhangjianming&quot;,&#xd;
	&quot;password&quot;: &quot;fR1v9cNoPUEuRK3w9yIeUOXy/xkIvmWfSHU3x8jkEuWs8l/HuAoDzYiq2w5H5NejFT41gCZ6pmc1rPnSRWeRYM+o7SAYUZdR6JwIcxFk+Lr/La9ZQW+laSZUBsvsMEASxqF9W+8FUGsfIrmOuCw+mHl0apqSE8cfWJ3R2VObQhc=&quot;,&#xd;
	&quot;checkCode&quot;: &quot;${imgCode}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineLogin/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取msg（while循环）" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">msg</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;msg&quot;:(.*?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加个人用户" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.2.1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加个人普通用户" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;userName&quot;: &quot;测试${__Random(0,99999999,userName)}&quot;,&#xd;
	&quot;name&quot;: &quot;&quot;,&#xd;
	&quot;birthday&quot;: &quot;&quot;,&#xd;
	&quot;phoneNumber&quot;: &quot;${phoneNumber}&quot;,&#xd;
	&quot;gender&quot;: &quot;&quot;,&#xd;
	&quot;userType&quot;: 1,&#xd;
	&quot;source&quot;: 1,&#xd;
	&quot;email&quot;: &quot;&quot;,&#xd;
	&quot;loginChannel&quot;: &quot;&quot;,&#xd;
	&quot;enable&quot;: &quot;&quot;,&#xd;
	&quot;contractUserType&quot;: 1,&#xd;
	&quot;loginIp&quot;: &quot;&quot;,&#xd;
	&quot;createTime&quot;: &quot;&quot;,&#xd;
	&quot;loginTime&quot;: &quot;&quot;,&#xd;
	&quot;userAvatarUrl&quot;: &quot;&quot;,&#xd;
	&quot;backgroundUrl&quot;: &quot;&quot;,&#xd;
	&quot;personalProfile&quot;: &quot;&quot;,&#xd;
	&quot;provinceId&quot;: &quot;&quot;,&#xd;
	&quot;cityId&quot;: &quot;&quot;,&#xd;
	&quot;areaId&quot;: &quot;&quot;,&#xd;
	&quot;address&quot;: &quot;&quot;,&#xd;
	&quot;remarks&quot;: &quot;&quot;,&#xd;
	&quot;identityUserType&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineUser/addOrEditUser</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">添加个人普通用户</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询用户" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;userName&quot;: &quot;&quot;,&#xd;
	&quot;phoneNumber&quot;: &quot;${phoneNumber}&quot;,&#xd;
	&quot;userType&quot;: 1,&#xd;
	&quot;enable&quot;: &quot;0&quot;,&#xd;
	&quot;contractUserType&quot;: 0,&#xd;
	&quot;createTimeS&quot;: &quot;&quot;,&#xd;
	&quot;createTimeE&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineUser/userList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102135">&quot;total&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传头像</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="修改登录密码" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="systemType" elementType="Header">
                  <stringProp name="Header.name">systemType</stringProp>
                  <stringProp name="Header.value">ANDROID</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="RSA加密密码" enabled="true">
              <stringProp name="BeanShellSampler.query">import org.apache.commons.codec.binary.Base64;
import javax.crypto.Cipher;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
/**
 * 根据指定公钥 加密转base64
 *
 * @param publicKeyStr 公钥字符
 * @param plaintext 待加密文本
 * @return 加密后的密文
 * @throws Exception
 */
public static String encryptStringForBase64(String publicKeyStr ,String plaintext) throws Exception
{
    if (plaintext == null) {
        return null;
    }
    byte[] data = plaintext.getBytes();
    RSAPublicKey rsaPublicKey = loadPublicKey(publicKeyStr);
    try
    {
        Cipher ci = Cipher.getInstance(&quot;RSA&quot;);
        ci.init(1, rsaPublicKey);
        byte[] en_data =  ci.doFinal(data);
        return new String(Base64.encodeBase64(en_data));
    }
    catch (NullPointerException ex)
    {
        LOGGER.error(&quot;keyPair cannot be null.&quot;);
        ex.printStackTrace();
    }
    catch (Exception ex)
    {
        LOGGER.error(ex.getCause().getMessage());
        ex.printStackTrace();
    }
    return null;
}
/**
 * 根据公钥字符串加载公钥
 *
 * @param publicKeyStr 公钥字符串
 * @return
 * @throws Exception
 */
private static RSAPublicKey loadPublicKey(String publicKeyStr) throws Exception {
    try {
        byte[] buffer = javax.xml.bind.DatatypeConverter.parseBase64Binary(publicKeyStr);
        KeyFactory keyFactory = KeyFactory.getInstance(&quot;RSA&quot;);
        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(buffer);
        return (RSAPublicKey) keyFactory.generatePublic(keySpec);
    } catch (NoSuchAlgorithmException e) {
        throw new Exception(&quot;无此算法&quot;, e);
    } catch (InvalidKeySpecException e) {
        throw new Exception(&quot;公钥非法&quot;, e);
    } catch (NullPointerException e) {
        throw new Exception(&quot;公钥数据为空&quot;, e);
    }
}
String pubKey = &quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw+wNooY7q/TYivTuy9q1K+ePkCtbmJKZvf8u8cGQHI6WeMDRpPv4LHc1HSnN8oqkiHXwJSgo3KD2T7MYLjUYlNyv65pWj0zdZAqisERr9bvmxewOnYVyhq5d8guBU7OfurhVUqESruiufTQiTpShriwhY9d6PVqjJ62jOYiQN4QIDAQAB&quot;;
String pwd = encryptStringForBase64(pubKey,&quot;Aa123456&quot;);
vars.put(&quot;pwd&quot;,pwd);
log.info(pwd);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改密码" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;oprType&quot;: 2,&#xd;
	&quot;password&quot;: &quot;${pwd}&quot;,&#xd;
	&quot;phoneNumber&quot;: &quot;13138810256&quot;,&#xd;
	&quot;verifyCode&quot;: &quot;111111&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/user/headlineLogin/forgetPassword</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${phoneNumber}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
                <stringProp name="RegexExtractor.refname">pwd</stringProp>
                <stringProp name="RegexExtractor.regex">{&quot;password&quot;:&quot;(.*?)&quot;,&quot;phoneNumber&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账号密码登录" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;phoneNumber&quot;: &quot;13138810256&quot;,&#xd;
	&quot;password&quot;: &quot;${pwd}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${app}/user/headlineLogin/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${phoneNumber}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 userId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">userId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.userId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 userName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">userName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.userName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 phoneNumber" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">phoneNumber</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.phoneNumber</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 userAvatarUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">userAvatarUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.userInfo.userAvatarUrl</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取 token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加商品分类" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传封面" enabled="false">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${icon}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${icon}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传图片失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加一级分类" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;level&quot;: 1,&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;商品&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;icon&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;describe&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/addOrEditClassification</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">发布微健康失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="一级分类列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/commodityClassificationList?name=${__urlencode(商品)}&amp;status=&amp;page=1&amp;rows=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 categories_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">categories_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="排序" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:${categories_id},&quot;sort&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/classificationResetSort</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加二级分类" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;level&quot;: 2,&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;pid&quot;: &quot;${categories_id}&quot;,&#xd;
	&quot;name&quot;: &quot;护理商品&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;icon&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;describe&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/addOrEditClassification</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1944844102">&quot;status&quot;:0,&quot;msg&quot;:null,</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="二级分类列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/commodityClassificationList?id=${categories_id}&amp;name=${__urlencode(护理商品)}&amp;status=&amp;page=1&amp;rows=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加三级分类" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;level&quot;: 3,&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;pid&quot;: &quot;${categories_id_2}&quot;,&#xd;
	&quot;name&quot;: &quot;个人护理商品&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;icon&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;describe&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/addOrEditClassification</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="三级分类列表" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/commodityClassificationList?id=${categories_id_2}&amp;name=${__urlencode(个人护理商品)}&amp;status=&amp;page=1&amp;rows=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货地址" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询默认地址" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/receivingAddress/selectDefaultAddress</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-339345383">&quot;status&quot;:1,&quot;msg&quot;:&quot;该用户不存在默认地址&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP添加收货地址" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;addressee&quot;: &quot;测试用户&quot;,&#xd;
	&quot;contacNumber&quot;: &quot;${phoneNumber}&quot;,&#xd;
	&quot;provinceId&quot;: 797,&#xd;
	&quot;cityId&quot;: 855,&#xd;
	&quot;areaId&quot;: 856,&#xd;
	&quot;address&quot;: &quot;锦上花园5栋A单元&quot;,&#xd;
	&quot;isDefault&quot;: 0&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/receivingAddress/insertClientAddress</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-940527199">&quot;status&quot;:0,&quot;msg&quot;:&quot;新增收货地址成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台添加收货地址" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;userId&quot;: &quot;${id}&quot;,&#xd;
	&quot;isDefault&quot;: 1,&#xd;
	&quot;addressee&quot;: &quot;测试用户&quot;,&#xd;
	&quot;contacNumber&quot;: &quot;${phoneNumber}&quot;,&#xd;
	&quot;provinceId&quot;: 797,&#xd;
	&quot;cityId&quot;: 855,&#xd;
	&quot;areaId&quot;: 856,&#xd;
	&quot;address&quot;: &quot;锦上花园5栋B单元&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/receivingAddress/insertManagementAddress</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-940527199">&quot;status&quot;:0,&quot;msg&quot;:&quot;新增收货地址成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询收货地址" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/receivingAddress/selectAddressForApp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加实物商品" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传商品图片" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image_2}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image_2}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加实物商品" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;实物商品&quot;,&#xd;
	&quot;unit&quot;: &quot;个&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;enterPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;sellPrice&quot;: &quot;500&quot;,&#xd;
	&quot;bazaarPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;total&quot;: &quot;20&quot;,&#xd;
	&quot;cover&quot;: &quot;${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl}&quot;,&#xd;
	&quot;useRule&quot;: &quot;&quot;,&#xd;
	&quot;priceExplain&quot;: &quot;&quot;,&#xd;
	&quot;detail&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;${categories_id}&quot;,&#xd;
	&quot;supplierId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/addOrEditCommodity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${categories_id}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="兑换实物商品" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_code" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 old_inventory" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">old_inventory</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].inventory</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 old_totalMoney" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">old_totalMoney</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商城列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityClass/getPrimaryClassification?page=1&amp;rows=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">发布微健康失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 categories_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">categories_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">商品分类</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品分类列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityClass/getGoodsByClassification?id=${categories_id}&amp;page=1&amp;rows=8 </stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">健康圈列表</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodity/appCommodityDetails?id=${commodity_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">健康圈列表</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP待发货列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=0&amp;pageNum=1&amp;pageSize=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodityCoder" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">commodityCoder</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].commodityCoder</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;orderCode&quot;: &quot;&quot;,&#xd;
	&quot;userId&quot;: &quot;&quot;,&#xd;
	&quot;userName&quot;: &quot;${userName}&quot;,&#xd;
	&quot;name&quot;: &quot;&quot;,&#xd;
	&quot;phoneNumber&quot;: &quot;${phoneNumber}&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;commodityCode&quot;: &quot;&quot;,&#xd;
	&quot;commodityName&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;orderStatus&quot;: 0,&#xd;
	&quot;expressStatus&quot;: &quot;&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityOrder/queryAll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 order_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">order_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="处理发货" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityOrder/updateStatusById?id=${order_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP待收货列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=3&amp;pageNum=1&amp;pageSize=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">600</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 new_totalMoney" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_totalMoney</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">import org.json.*;

//获取接口返回内容
String response_data = prev.getResponseDataAsString();
log.info(&quot;111111111111111111111111&quot;);
//int initial_gold = Integer.parseInt(vars.get(&quot;initial_gold&quot;));
int new_totalMoney = Integer.parseInt(vars.get(&quot;new_totalMoney&quot;));
if(new_totalMoney + 500 != ${old_totalMoney}){
	Failure = true;
	FailureMessage = &quot;金币数不正确！&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">600</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP实物详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodity/appCommodityDetails?id=${commodity_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">600</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 new_inventory" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">new_inventory</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.inventory</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">import org.json.*;

//获取接口返回内容
String response_data = prev.getResponseDataAsString();

log.info(&quot;111111111111111111111111&quot;);
//int initial_gold = Integer.parseInt(vars.get(&quot;initial_gold&quot;));
int new_inventory = Integer.parseInt(vars.get(&quot;new_inventory&quot;));
if(new_inventory + 1 != ${old_inventory}){
	Failure = true;
	FailureMessage = &quot;库存数不正确！&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加虚拟卡券" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(list)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;


public TreeMap paramSort(Map params){
        TreeMap map = JSON.parseObject(JSON.toJSONString(params),TreeMap.class);
		for(String key:map.keySet()){
            Object param = map.get(key);
            //List类型
            if(param instanceof List){
               String[] strings = JSON.parseObject(param, String[].class);
			String str = &quot;&quot;;
			for (int i = 0; i &lt; strings.length; i++) {
				TreeMap map = JSON.parseObject(strings[i],TreeMap.class);
				str+=&quot;,&quot;+JSON.toJSONString(map);
			}
			param = str.substring(1,str.length());
            }
            //Map类型
            if(param instanceof Map){
			log.info(&quot;444444&quot;);
                map.put(key,this.paramSort((Map) param));
            }else{
                map.put(key,param);
            }
        }
        return map;
    }

//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();

//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
Map map1 = JSON.parseObject(params,Map.class);
log.info(&quot;1111111111111111111111111111111111111111111111111&quot;);
TreeMap map = paramSort(map1);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
//log.info(&quot;11111111111111&quot;);
log.info(nowSign);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传商品图片" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image_1}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image_1}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传图片失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加虚拟卡券" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;中国石化500元加油卡&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;虚拟商品&quot;,&#xd;
	&quot;unit&quot;: &quot;张&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;enterPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;sellPrice&quot;: &quot;500&quot;,&#xd;
	&quot;bazaarPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;total&quot;: 0,&#xd;
	&quot;cover&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;useRule&quot;: &quot;&quot;,&#xd;
	&quot;priceExplain&quot;: &quot;&quot;,&#xd;
	&quot;detail&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;${categories_id}&quot;,&#xd;
	&quot;supplierId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/addOrEditCommodity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${categories_id}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-540252149">{&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="虚拟卡券列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;中国石化500元加油卡&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 coupons_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coupons_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 coupons_code" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coupons_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 new_inventory" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_inventory</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].inventory</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加卡券码" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&#xd;
	&quot;couponCoder&quot;: &quot;AAA${__Random(00000001,99999999,)}&quot;,&#xd;
	&quot;couponStartTime&quot;: &quot;2021-05-20 00:00:00&quot;,&#xd;
	&quot;couponEndTime&quot;: &quot;2025-06-30 00:00:00&quot;,&#xd;
	&quot;commodityCoder&quot;: &quot;${coupons_code}&quot;&#xd;
}, {&#xd;
	&quot;couponCoder&quot;: &quot;AAA${__Random(00000001,99999999,)}&quot;,&#xd;
	&quot;couponStartTime&quot;: &quot;2021-05-20 00:00:00&quot;,&#xd;
	&quot;couponEndTime&quot;: &quot;2025-06-30 00:00:00&quot;,&#xd;
	&quot;commodityCoder&quot;: &quot;${coupons_code}&quot;&#xd;
}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityCoupon/insertAll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;


//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();

//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();

String params = reqMap.get(&quot;&quot;).toString();
//TreeMap map = JSON.parseObject(params,TreeMap.class);
String[] strings = JSON.parseObject(params, String[].class);
String str = &quot;&quot;;
for (int i = 0; i &lt; strings.length; i++) {
	TreeMap map = JSON.parseObject(strings[i],TreeMap.class);
	str+=&quot;,&quot;+JSON.toJSONString(map);
}
log.info(&quot;34355465756878679789&quot;);
str=str.substring(1,str.length());
str +=&quot;&amp;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);

MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(最終)" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;


public TreeMap paramSort(Map params){
        TreeMap map = JSON.parseObject(JSON.toJSONString(params),TreeMap.class);
		for(String key:map.keySet()){
            Object param = map.get(key);
            //List类型
            if(param instanceof List){
               String[] strings = JSON.parseObject(param, String[].class);
			String str = &quot;&quot;;
			for (int i = 0; i &lt; strings.length; i++) {
				TreeMap map = JSON.parseObject(strings[i],TreeMap.class);
				str+=&quot;,&quot;+JSON.toJSONString(map);
			}
			param = str.substring(1,str.length());
            }
            //Map类型
            if(param instanceof Map){
			log.info(&quot;444444&quot;);
                map.put(key,this.paramSort((Map) param));
            }else{
                map.put(key,param);
            }
        }
        return map;
    }

//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();

//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
Map map1 = JSON.parseObject(params,Map.class);
log.info(&quot;1111111111111111111111111111111111111111111111111&quot;);
TreeMap map = paramSort(map1);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
//log.info(&quot;11111111111111&quot;);
log.info(nowSign);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卡券码列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityCoupon/queryAll?couponCoder=&amp;buyStatus=&amp;buyUserId=&amp;orderCoder=&amp;commodityCoder=${coupons_code}&amp;pageNum=1&amp;pageSize=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="兑换虚拟卡券" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 old_totalMoney" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">old_totalMoney</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卡券商品详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodity/appCommodityDetails?id=${coupons_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">健康圈列表</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换虚拟卡券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${coupons_code}&amp;recipientsName=${phoneNumber}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园1号</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP已完成列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=1&amp;pageNum=1&amp;pageSize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodityCoder" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">commodityCoder</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].commodityCoder</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 new_totalMoney" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">new_totalMoney</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">import org.json.*;

//获取接口返回内容
String response_data = prev.getResponseDataAsString();
log.info(&quot;111111111111111111111111&quot;);
//int initial_gold = Integer.parseInt(vars.get(&quot;initial_gold&quot;));
int new_totalMoney = Integer.parseInt(vars.get(&quot;new_totalMoney&quot;));
if(new_totalMoney + 500 != ${old_totalMoney}){
	Failure = true;
	FailureMessage = &quot;金币数不正确！&quot;;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP卡券详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodity/appCommodityDetails?id=${coupons_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1197374751">&quot;inventory&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="取消订单" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_code" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 inventory" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">inventory</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].inventory</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(${JMeterThread.last_sample_ok}==true,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
                <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                  <collectionProp name="HTTPFileArgs.files">
                    <elementProp name="${image}" elementType="HTTPFileArg">
                      <stringProp name="File.path">${image}</stringProp>
                      <stringProp name="File.paramname">file</stringProp>
                      <stringProp name="File.mimetype">image/png</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">Java</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 old_totalMoney" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">old_totalMoney</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP待发货列表" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=0&amp;pageNum=1&amp;pageSize=10</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 order_id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">order_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP取消订单" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/cancelById/${order_id}</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">Java</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP已取消列表" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=2&amp;pageNum=1&amp;pageSize=10</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 order_id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">order_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].commodity.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP待发货列表" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/queryByUserId?status=0&amp;pageNum=1&amp;pageSize=10</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 order_id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">order_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].commodity.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="今日金币" enabled="true">
                <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                  <collectionProp name="HTTPFileArgs.files">
                    <elementProp name="${image}" elementType="HTTPFileArg">
                      <stringProp name="File.path">${image}</stringProp>
                      <stringProp name="File.paramname">file</stringProp>
                      <stringProp name="File.mimetype">image/png</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/goldRecord/queryTodayGoldNum</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">Java</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 new_totalMoney" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">new_totalMoney</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.goldNum</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">import org.json.*;

//获取接口返回内容
String response_data = prev.getResponseDataAsString();
log.info(&quot;111111111111111111111111&quot;);
//int initial_gold = Integer.parseInt(vars.get(&quot;initial_gold&quot;));
int new_totalMoney = Integer.parseInt(vars.get(&quot;new_totalMoney&quot;));
if(new_totalMoney == ${old_totalMoney}){
	Failure = false;
	FailureMessage = &quot;金币数不正确！&quot;;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">600</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP实物详情" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodity/appCommodityDetails?id=${commodity_id}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1316223242">&quot;inventory&quot;:${inventory}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">600</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加商品专题" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;isTopic&quot;:1,&quot;name&quot;:&quot;Apple iPhone 11 Pro&quot;,&quot;typeIds&quot;:&quot;&quot;,&quot;page&quot;:1,&quot;rows&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商品专题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityTopic/addTopic?ids=${commodity_id}&amp;name=${__urlencode(热卖)}&amp;status=1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品专题列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityTopic/queryTopicList?isTopic=1&amp;name=${__urlencode(热卖)}&amp;status=&amp;pageNum=1&amp;pageSize=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102135">&quot;total&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_topic_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">commodity_topic_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="下架专题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityTopic/updateStatusByTopicId?topicId=${commodity_topic_id}&amp;status=2</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品专题列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityTopic/queryTopicList?isTopic=1&amp;name=${__urlencode(热卖)}&amp;status=&amp;pageNum=1&amp;pageSize=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-161783866">&quot;status&quot;:2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除专题" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityTopic/deleteByTopicId?topicId=${commodity_topic_id}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加供应商" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加供应商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;supplierName&quot;:&quot;华为药业&quot;,&quot;type&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/supplierManagement/insertSupplierManagement</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-650745321">&quot;status&quot;:0,&quot;msg&quot;:&quot;新增供应商成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;supplierName&quot;:&quot;华为药业&quot;,&quot;type&quot;:&quot;&quot;,&quot;page&quot;:1,&quot;rows&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/supplierManagement/selectSupplierManagement</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102135">&quot;total&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 supplier_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">supplier_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除供应商" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/supplierManagement/delSupplierManagement?id=${supplier_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2053697773">&quot;status&quot;:0,&quot;msg&quot;:&quot;删除供应商成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="异常场景用例管理" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="兑换数量大于库存" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_code" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品(数量大于库存)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=100&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="288010219">&quot;status&quot;:1,&quot;msg&quot;:&quot;商品库存不足!&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品(数量为0)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=0&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-857055059">&quot;status&quot;:1,&quot;msg&quot;:&quot;购买数量有误！&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品(数量为-1)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=-1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-857055059">&quot;status&quot;:1,&quot;msg&quot;:&quot;购买数量有误！&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="金币不足兑换失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="一级分类列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodityClass/commodityClassificationList?name=${__urlencode(商品)}&amp;status=&amp;page=1&amp;rows=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 categories_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">categories_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.2.1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传商品图片" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image_2}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image_2}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加实物商品" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 3&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;实物商品&quot;,&#xd;
	&quot;unit&quot;: &quot;个&quot;,&#xd;
	&quot;status&quot;: 1,&#xd;
	&quot;enterPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;sellPrice&quot;: &quot;50000000&quot;,&#xd;
	&quot;bazaarPrice&quot;: &quot;1000&quot;,&#xd;
	&quot;total&quot;: &quot;1&quot;,&#xd;
	&quot;cover&quot;: &quot;${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl},${coverPictureUrl}&quot;,&#xd;
	&quot;useRule&quot;: &quot;&quot;,&#xd;
	&quot;priceExplain&quot;: &quot;&quot;,&#xd;
	&quot;detail&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;${categories_id}&quot;,&#xd;
	&quot;supplierId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/addOrEditCommodity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${categories_id}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 3&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_code" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-211642705">&quot;status&quot;:1,&quot;msg&quot;:&quot;余额不足!&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="禁用商品后兑换失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="实物商品列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;Apple iPhone 11 Pro&quot;,&#xd;
	&quot;stairTypeName&quot;: &quot;&quot;,&#xd;
	&quot;supplier&quot;: &quot;&quot;,&#xd;
	&quot;typeIds&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: 1,&#xd;
	&quot;rows&quot;: 10&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/gold/commodity/commodityList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_id" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 commodity_code" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">commodity_code</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 old_inventory" enabled="true">
                <stringProp name="TestPlan.comments">商品</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">old_inventory</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].inventory</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(${JMeterThread.last_sample_ok}==true,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="禁用商品" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${admin}/gold/commodity/updateStatusById?id=${commodity_id}&amp;status=0</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">Java</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2121102134">&quot;total&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message">查看作者失败</stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">systemtype</stringProp>
                      <stringProp name="Header.value">WEB</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="260333375">&quot;status&quot;:1,&quot;msg&quot;:&quot;商品不存在!&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="versionName" elementType="Header">
                      <stringProp name="Header.name">versionName</stringProp>
                      <stringProp name="Header.value">1.3.0</stringProp>
                    </elementProp>
                    <elementProp name="sign" elementType="Header">
                      <stringProp name="Header.name">sign</stringProp>
                      <stringProp name="Header.value">${nowSign}</stringProp>
                    </elementProp>
                    <elementProp name="systemType" elementType="Header">
                      <stringProp name="Header.name">systemType</stringProp>
                      <stringProp name="Header.value">ANDROID</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${token}</stringProp>
                    </elementProp>
                    <elementProp name="timestamp" elementType="Header">
                      <stringProp name="Header.name">timestamp</stringProp>
                      <stringProp name="Header.value">${timestamp}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="账户禁用后兑换失败" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="禁用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:${id},&quot;enable&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineUser/userEnable</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">禁用</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="兑换实物商品" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/gold/commodityOrder/createOrder?buyNumber=1&amp;commodityCoder=${commodity_code}&amp;recipientsName=${userName}&amp;recipientsPhone=${phoneNumber}&amp;recipientsSite=797/855/856/锦上花园5栋A单元</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${commodity_code}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1632078382">&quot;code&quot;:1001,&quot;message&quot;:&quot;您的账号异常，不可兑换商品，请至[我的]-[用户反馈]联系平台客服&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="删除商品" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">systemtype</stringProp>
                  <stringProp name="Header.value">WEB</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传视频" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${video}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${video}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">video/mp4</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/file/fileAccess/createUploadVideo?fileName=video.mp4&amp;title=video.mp4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-386976367">&quot;status&quot;:0,&quot;msg&quot;:&quot;获取成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传视频</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取videoId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">videoId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.videoId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传封面" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传图片失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发布视频" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;&quot;,&#xd;
	&quot;title&quot;: &quot;健康头条：中高风险地区来京人员及时报告&quot;,&#xd;
	&quot;topic&quot;: &quot;&quot;,&#xd;
	&quot;description&quot;: &quot;疾控部门提醒市民，继续增强防护意识，继续坚持非必须不出境，非必须不去中高风险地区旅行或出差。中高风险地区来京人员应及时主动向所在社区和单位报告，配合并支持社区采取的中高风险地区人员排查、隔离、核酸筛查、健康监测等管控措施。&quot;,&#xd;
	&quot;tags&quot;: &quot;医疗&quot;,&#xd;
	&quot;coverPictureUrl&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;videoFile&quot;: &quot;${videoId}&quot;,&#xd;
	&quot;status&quot;: 0,&#xd;
	&quot;category&quot;: 1,&#xd;
	&quot;videoType&quot;: 0,&#xd;
	&quot;resourcesType&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/video/video/addVideo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="913865738">&quot;status&quot;:0,&quot;msg&quot;:&quot;视频保存成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="待审核视频列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;category&quot;: 1,&#xd;
	&quot;videoType&quot;: 0,&#xd;
	&quot;resourcesType&quot;: 1,&#xd;
	&quot;title&quot;: &quot;健康头条：中高风险地区来京人员及时报告&quot;,&#xd;
	&quot;publish_name&quot;: &quot;${userName}&quot;,&#xd;
	&quot;updateName&quot;: &quot;&quot;,&#xd;
	&quot;statusReview&quot;: &quot;0&quot;,&#xd;
	&quot;status&quot;: &quot;&quot;,&#xd;
	&quot;startDate&quot;: &quot;&quot;,&#xd;
	&quot;endDate&quot;: &quot;&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;menuId&quot;: 61&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/article/search/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102135">&quot;total&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 video_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">video_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核不通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:&quot;${video_id}&quot;,&quot;remark&quot;:&quot;视频审核不通过&quot;,&quot;statusReview&quot;:2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/video/video/reviewVideo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-596318898">&quot;status&quot;:0,&quot;msg&quot;:&quot;点击成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="视频列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;category&quot;: 1,&#xd;
	&quot;endDate&quot;: &quot;&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;startDate&quot;: &quot;&quot;,&#xd;
	&quot;status&quot;: &quot;&quot;,&#xd;
	&quot;statusReview&quot;: -1,&#xd;
	&quot;terms&quot;: &quot;&quot;,&#xd;
	&quot;videoType&quot;: 0,&#xd;
	&quot;type&quot;: -1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/article/contentManager/queryAll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-437532593">&quot;statusReview&quot;:3</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复审不通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:&quot;${video_id}&quot;,&quot;remark&quot;:&quot;视频复审不通过&quot;,&quot;statusReview&quot;:2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/video/video/recheckVideo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-596318898">&quot;status&quot;:0,&quot;msg&quot;:&quot;点击成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="视频列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;category&quot;: 1,&#xd;
	&quot;endDate&quot;: &quot;&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;startDate&quot;: &quot;&quot;,&#xd;
	&quot;status&quot;: &quot;&quot;,&#xd;
	&quot;statusReview&quot;: -1,&#xd;
	&quot;terms&quot;: &quot;&quot;,&#xd;
	&quot;videoType&quot;: 0,&#xd;
	&quot;type&quot;: -1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/article/contentManager/queryAll</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-437532594">&quot;statusReview&quot;:2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除视频" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/video/video/delVideo?id=${video_id}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="131821697">&quot;status&quot;:0,&quot;msg&quot;:&quot;删除视频成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="禁用后无法转发评论发健康圈" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="versionName" elementType="Header">
                  <stringProp name="Header.name">versionName</stringProp>
                  <stringProp name="Header.value">1.3.0</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${nowSign}</stringProp>
                </elementProp>
                <elementProp name="systemType" elementType="Header">
                  <stringProp name="Header.name">systemType</stringProp>
                  <stringProp name="Header.value">ANDROID</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传封面" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传图片失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发布健康圈" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;${id}&quot;,&#xd;
	&quot;publishName&quot;: &quot;${userName}&quot;,&#xd;
	&quot;textContent&quot;: &quot;广东疾控专家提醒：从中风险地区返粤做核酸检测、向社区报备&quot;,&#xd;
	&quot;provinceName&quot;: &quot;&quot;,&#xd;
	&quot;cityName&quot;: &quot;&quot;,&#xd;
	&quot;coverPictureNum&quot;: 1,&#xd;
	&quot;coverPictureUrl&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;coverPictureInfo&quot;: &quot;1080*2340&quot;,&#xd;
	&quot;textPictureUrl&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;textPictureInfo&quot;: &quot;1080*2340&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/article/microhealth/publishMicroHealthByApp/-1</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="健康圈列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;category&quot;: &quot;4&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 20,&#xd;
	&quot;publishId&quot;: &quot;${id}&quot;,&#xd;
	&quot;terms&quot;: &quot;&quot;,&#xd;
	&quot;listType&quot;: 0,&#xd;
	&quot;videoType&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/search/search/healthManagerTermSearch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2121102135">&quot;total&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">800</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取 disable_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">disable_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.list[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="禁用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:${id},&quot;enable&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineUser/userEnable</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1032568230">&quot;status&quot;:0,&quot;msg&quot;:null</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">禁用</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询用户" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userName&quot;:&quot;&quot;,&quot;phoneNumber&quot;:&quot;${phoneNumber}&quot;,&quot;userType&quot;:&quot;&quot;,&quot;enable&quot;:&quot;&quot;,&quot;contractUserType&quot;:0,&quot;createTimeS&quot;:&quot;&quot;,&quot;createTimeE&quot;:&quot;&quot;,&quot;page&quot;:1,&quot;rows&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${admin}/user/headlineUser/userList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1276761236">&quot;enable&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">禁用用户</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">800</stringProp>
              </ConstantTimer>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="站内转发" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/article/transmit/app/add?category=4&amp;draftId=0&amp;message=好&amp;resourceId=${disable_id}&amp;status=1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">${forward_id}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">channel</stringProp>
                    <stringProp name="Header.value">hhhl</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1135148808">&quot;code&quot;:1001,&quot;message&quot;:&quot;您的账号异常，不可发布，请至[我的]-[用户反馈]联系平台客服&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="评论" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;essayId&quot;: &quot;${disable_id}&quot;,&#xd;
	&quot;emoticonUrl&quot;: &quot;&quot;,&#xd;
	&quot;essayContent&quot;: &quot;${disable_id}&quot;,&#xd;
	&quot;comment&quot;: &quot;健康头条&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/comment/comment/essayComment</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="68208996">&quot;code&quot;:1001,&quot;message&quot;:&quot;您的账号异常，不可评论，请至[我的]-[用户反馈]联系平台客服&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传封面" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${image}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${image}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">image/png</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/file/file/uploadfile</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-228104486">&quot;status&quot;:0,&quot;msg&quot;:&quot;上传成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">上传图片失败</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取coverPictureUrl" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">coverPictureUrl</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发布健康圈" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;${id}&quot;,&#xd;
	&quot;publishName&quot;: &quot;${userName}&quot;,&#xd;
	&quot;textContent&quot;: &quot;广东疾控专家提醒：从中风险地区返粤做核酸检测、向社区报备&quot;,&#xd;
	&quot;provinceName&quot;: &quot;&quot;,&#xd;
	&quot;cityName&quot;: &quot;&quot;,&#xd;
	&quot;coverPictureNum&quot;: 1,&#xd;
	&quot;coverPictureUrl&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;coverPictureInfo&quot;: &quot;1080*2340&quot;,&#xd;
	&quot;textPictureUrl&quot;: &quot;${coverPictureUrl}&quot;,&#xd;
	&quot;textPictureInfo&quot;: &quot;1080*2340&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/article/microhealth/publishMicroHealthByApp/-1</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1135148808">&quot;code&quot;:1001,&quot;message&quot;:&quot;您的账号异常，不可发布，请至[我的]-[用户反馈]联系平台客服&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除健康圈" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf8</stringProp>
              <stringProp name="HTTPSampler.path">${health}/article/microhealth/deleteMicroHealthById/${disable_id}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1281405484">&quot;status&quot;:0,&quot;msg&quot;:&quot;删除成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">800</stringProp>
              </ConstantTimer>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(Web)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">systemtype</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(Web)" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);
Arguments args = sampler.getArguments();



//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Map reqMap = args.getArgumentsAsMap();
String params = reqMap.get(&quot;&quot;).toString();
TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="注销账号" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询现有金币" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;firstChannelId&quot;:2,&quot;firstChannelName&quot;:&quot;推荐&quot;,&quot;pageNum&quot;:1,&quot;pageSize&quot;:24,&quot;imei&quot;:&quot;046778186782e35f&quot;,&quot;provinceId&quot;:&quot;&quot;,&quot;userPageSize&quot;:20,&quot;deviceType&quot;:2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${app}/search/search/getRecommendDataFromRedis</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器(APP)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="versionName" elementType="Header">
                    <stringProp name="Header.name">versionName</stringProp>
                    <stringProp name="Header.value">1.3.0</stringProp>
                  </elementProp>
                  <elementProp name="sign" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${nowSign}</stringProp>
                  </elementProp>
                  <elementProp name="systemType" elementType="Header">
                    <stringProp name="Header.name">systemType</stringProp>
                    <stringProp name="Header.value">ANDROID</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                  <elementProp name="timestamp" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;



//获取接口的请求参数
Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);

//转成map,{&quot;&quot;, &quot;请求参数&quot;}
Arguments args = sampler.getArguments();
Map reqMap = args.getArgumentsAsMap();
//log.info(JSON.toJSONString(args));

String params = reqMap.get(&quot;&quot;).toString();
log.info(&quot;1111111111111111111111111111&quot;);
log.info(params);

TreeMap map = JSON.parseObject(params,TreeMap.class);
String str = &quot;&quot;;
for(String key:map.keySet()){
	str += key + &quot;=&quot; + map.get(key) + &quot;&amp;&quot;;
}
str += &quot;timestamp=&quot;+timestamp+&quot;&amp;key=JQz80G8xBQblioVgpD7kYbNWEmRgFpCi&quot;;
log.info(str);
MessageDigest digestFunction = MessageDigest.getInstance(&quot;SHA-1&quot;);
String nowSign = new BigInteger(1,digestFunction.digest(str.getBytes(Charset.forName(&quot;UTF-8&quot;)))).toString(16).toUpperCase();

while(nowSign.length() &lt; 40){
	nowSign = &quot;0&quot;+nowSign;
	log.info(&quot;while:&quot;+nowSign);
}

vars.put(&quot;nowSign&quot;, nowSign);
log.info(&quot;11111111111111&quot;);
log.info(nowSign);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序(APP)" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;


Arguments args = sampler.getArguments();
Map reqMap = args.getArgumentsAsMap();

String params = reqMap.get(&quot;&quot;).toString();
log.info(&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;);
log.info(params);
vars.put(&quot;params&quot;,params);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 预处理程序" enabled="false">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import time
import hashlib
import sys
reload(sys)
sys.setdefaultencoding(&apos;utf-8&apos;)

params = ${__property(params)}


def test(params):
	data = {&quot;firstChannelId&quot;:2,&quot;firstChannelName&quot;:&quot;推荐&quot;,&quot;pageNum&quot;:1,&quot;pageSize&quot;:24,&quot;imei&quot;:&quot;046778186782e35f&quot;,&quot;provinceId&quot;:&quot;&quot;,&quot;userPageSize&quot;:20,&quot;deviceType&quot;:2}
	data[&apos;firstChannelName&apos;] = data[&apos;firstChannelName&apos;].decode(&apos;utf-8&apos;)
	
	ts = time.time() * 1000
	timestamp = ts
	
	sign = &quot;&amp;&quot;.join(sorted([str(key)+&quot;=&quot;+str(value) for key, value in params.items()]))
	nowSign = sign + &quot;&amp;&quot; + &quot;timestamp=&quot; + str(timestamp) + &quot;&amp;&quot; + &quot;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;
	print(timestamp,nowSign)
	return timestamp,nowSign
test(params)

vars.put(&quot;timestamp&quot;, timestamp);
vars.put(&quot;nowSign&quot;, nowSign);
</stringProp>
                <stringProp name="scriptLanguage">jython</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 预处理程序" enabled="false">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import time
import hashlib
import org.apache.jmeter.config.Arguments;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.nio.charset.Charset;

Date d1 = new Date();
String timestamp = d1.getTime()+&quot;&quot;;
vars.put(&quot;timestamp&quot;, timestamp);

Arguments args = sampler.getArguments();
Map reqMap = args.getArgumentsAsMap();

String params = reqMap.get(&quot;&quot;).toString();
log.info(&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;);
log.info(params);
vars.put(&quot;params&quot;,params);

//vars.get(&quot;params&quot;);

ts = round(time.time() * 1000)
timestamp = str(ts)

new_res = &quot;&amp;&quot;.join(sorted([str(key) + &quot;=&quot; + str(value) for key, value in params.items()]))

sign = new_res + &quot;&amp;&quot; + &quot;timestamp=&quot; + str(timestamp) + &quot;&amp;&quot; + &quot;key=b0pDTrrfEn7zhnnLVRjmQG1pUzMrNt1M&quot;


new_sign = hashlib.sha1(sign.encode(&quot;utf8&quot;)).hexdigest()

vars.put(&quot;nowSign&quot;, nowSign);</stringProp>
                <stringProp name="scriptLanguage">jython</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
