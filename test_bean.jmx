<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 取样器" enabled="true">
          <stringProp name="BeanShellSampler.query">int a=2;
String user=&quot;tester&quot;;
String[] users=new String[]{&quot;tester1&quot;,&quot;tetster2&quot;};
List list=new ArrayList();


// 往list中添加变量
list.add(&quot;tester 2&quot;);
list.add(&quot;tester 3&quot;);
list.add(&quot;tester 4&quot;);


// for 循环
for(int i=0;i&lt;list.size();i++){
	log.error(list.get(i));
}

// if 条件判断语句
if(list.size()&gt;0){
	log.error(list.get(0));
}else if(list.size()&lt;=0){
	log.error(&quot;list is empty&quot;);
}


String article = vars.get(&quot;article&quot;);

log.info(&quot;----------------&quot;+article);





</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 取样器" enabled="true">
          <stringProp name="BeanShellSampler.query">// vars.get(&quot;变量名&quot;);     vars.put(&quot;变量名&quot;,value);
String username=vars.get(&quot;username&quot;);
log.error(username);

// 改变这个username的值为admin123   此时username的值就等于admin123
vars.put(&quot;username&quot;,&quot;admin123&quot;);

//vars.getObject(&quot;变量名&quot;);    vars.putObject(&quot;变量名&quot;,&quot;值&quot;);
String[] users=new String[]{&quot;aa&quot;,&quot;bb&quot;};
vars.putObject(&quot;users&quot;,users);

String[] users=vars.getObject(&quot;users&quot;);
String user=users[0];
log.error(user);

//props 可以跨线程组使用
String starttime=props.get(&quot;&quot;)</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
          <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSONObject;

String data=prev.getResponseDataAsString();
JSONObject json=JSONObject.parseObject(data);
String rlt=json.getString(&quot;result&quot;);
log.error(rlt);
if(!rlt.equals(&quot;1&quot;)){
	Failure=true;
	FailureMessage=&quot;登录失败&quot;
}



for(int i=0;i&lt;jsonTemp.length();i++){
	String id = json_array.get(i).getString(&quot;id&quot;);
	if()
}</stringProp>
          <stringProp name="BeanShellAssertion.filename"></stringProp>
          <stringProp name="BeanShellAssertion.parameters"></stringProp>
          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
        </BeanShellAssertion>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">//  专题推送的脚本


//获取接口返回内容
String response_data = prev.getResponseDataAsString();
log.info(&quot;111111111111111111111111&quot;);

//将String类型的返回值构造成JSONObject对象
JSONObject json_data = new JSONObject(response_data);
log.info(&quot;22222&quot;);

JSONArray json_array = json_data.get(&quot;data&quot;).get(&quot;data&quot;).getJSONArray(&quot;list&quot;);
log.info(&quot;json_array数组的值为：&quot;+json_array);

JSONObject jsonTemp = json_array.getJSONObject(1);

// 把contentId :321313 放到 jsonTemp里面
jsonTemp.put(&quot;contentId&quot;,&quot;${article_id}&quot;);
jsonTemp.put(&quot;sort&quot;,1);
jsonTemp.put(&quot;noticeColumnPush&quot;,1);
jsonTemp.put(&quot;isNotificationPush&quot;,true);

log.info(&quot;jsonTemp的值为：&quot;+jsonTemp);

vars.putObject(&quot;jsonTemp&quot;,jsonTemp);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
